{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","current_house","target","innerHTML","setState","getHouseInfo","HOUSES","find","house","name","state","features","description","rent","available_date","bedrooms","houseInfo","react_default","a","createElement","Fragment","App_NavBar","houses","App_House","houseDescription","houseFeatures","Component","NavBar","_this2","handleMenuClick","prevState","navLinksVisible","NavBarStyled","MenuIcon","onClick","NavTitle","App_NavLinks","visible","styled","div","_templateObject","_templateObject2","h1","_templateObject3","NavLinks","_this3","NavLinksStyled","map","i","Button","href","value","key","_templateObject4","House","_this4","stopPropagation","current_section","HOUSE_LINKS","App_InfoLinks","sections","App_Info","section","text","InfoLinks","_templateObject5","_this5","j","App_Link","Link","Ikey","Info","feature","button","_templateObject6","primary","css","_templateObject7","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4fd14a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport  styled, { css } from 'styled-components'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.HOUSES = [\n      {\n        'name':'Glenroy Street',\n        'features':[\n          \"7 double bedrooms all with built in wardrobes\",\n          \"3 bathrooms + 1 cloakroom\",\n          \"Large kitchen dining room with lounge area including leather suite and TV\",\n          \"Original tiled hallway\",\n          \"Available from 1st Jul 2019\",\n          \"Furnished\",\n        ],\n        'description':`A fantastic 7 bedroom property situated close to the amenities of Albany Road and \n                        City Road, making it perfect for all Cardiff students! This completely refurbished \n                        property boasts a large kitchen with dining room and adjoining lounge with flatscreen TV. \n                        WiFi is already installed and included within the rental. \n                        The property has carpet flooring throughout the bedrooms . 3 x fully equipped bathrooms. \n                        Each bedroom has a double bed, built in wardrobe, desk and additional storage areas.\n                        Rent is very competitive at £350 monthly (<£80 per week). Half rent during July/ August\n                        No agency fees\n                        Please feel free to email for any further questions Available date 01/07/19`,\n        'rent': 350,\n        'available_date': '01/07/19',\n        'bedrooms': 7,\n      },\n      {\n        'name':'Mackintosh Place',\n        'features':[\n          \"7 double bathrooms \",\n          \"2 bathrooms + 1 cloakroom\",\n          \"Dining room\",\n          \"TV /reception room\",\n          \"Available from 1st Jul 2019\",\n          \"Furnished\",\n        ],\n        'description':`A fantastic 7 bedroom property situated close to the amenities of \n                        Albany Road and City Road, making it perfect for all Cardiff students! \n                        This property boasts a large kitchen with leading to a dining room.\n                        In addition there is a large living room with flatscreen TV. \n                        The property consists of laminate and carpet flooring throughout. \n                        2 x fully equipped bathrooms, one brand new in 2018 and the other to \n                        be refurbished in 2019 ,both in a funky green and white! \n                        Each bedroom has a double bed, wardrobe, desk and desk- chair.\n                        Rent is very competitive at £350 monthly (<£80 per week). Half rent during July/ August\n                        No agency fees\n                        Please feel free to email for any further questions Available date 01/07/19`,\n        'rent': 350,\n        'available_date': '01/07/19',\n        'bedrooms': 7,\n      }\n    ]\n    this.state = {\n      current_house: \"Glenroy Street\",\n    }\n  }\n\n  handleClick = (e) => { \n    var current_house = e.target.innerHTML\n    this.setState({current_house})\n  }\n\n  getHouseInfo = () => {\n    return this.HOUSES.find(house => house.name === this.state.current_house)\n  }\n\n  render() {\n    var houseInfo = this.getHouseInfo()\n    return (\n      <React.Fragment>\n      <NavBar houses={this.HOUSES} handleClick={this.handleClick}/>\n      <House \n        name={this.state.current_house} \n        houses={this.HOUSES} \n        houseDescription={houseInfo.description}\n        houseFeatures={houseInfo.features}\n\n      />\n      </React.Fragment>\n    );\n  }\n}\n\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navLinksVisible: false,\n    }\n  }\n\n  handleMenuClick = (e) => {\n    this.setState(prevState => ({\n      navLinksVisible: !prevState.navLinksVisible\n    }))\n  }\n\n  handleClick = (e) => {\n    this.props.handleClick(e)\n    this.setState(prevState => ({\n      navLinksVisible: !prevState.navLinksVisible\n    }))\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n      <NavBarStyled>\n        <MenuIcon onClick={this.handleMenuClick}>\n        ☰\n        </MenuIcon>\n        <NavTitle>\n        Rhys and Tony houses\n        </NavTitle>\n      </NavBarStyled>\n      <NavLinks visible={this.state.navLinksVisible} houses={this.props.houses} handleClick={this.handleClick}/>\n      </React.Fragment>\n\n    )\n  }\n}\n\nconst NavBarStyled = styled.div``\nconst MenuIcon = styled.div`\n  display: inline-block;\n  font-size: 2em;\n  border-radius: 5px;\n  line-height: 30px;\n\n\n`\nconst NavTitle = styled.h1`\n  display: inline-block;\n  padding: 0px 10px;\n  line-height: 30px;\n`\n\n\nclass NavLinks extends Component {\n  constructor(props){\n    super(props)\n\n  }\n\n\n  render() {\n    return (\n      <NavLinksStyled>\n            \n      {this.props.visible && this.props.houses.map((house,i) => (\n        <Button onClick = {this.props.handleClick} href=\"#\" value={house.name} key={i}>{house.name}</Button>\n        ))}\n      </NavLinksStyled>\n    )\n  }\n}\n\nconst NavLinksStyled = styled.div``\n\n\n\nclass House extends Component {\n  constructor(props) {\n    super(props)\n    this.HOUSE_LINKS = [\n      {\n        'href':'#',\n        'name':'Info',\n      },\n      {\n        'href':'#',\n        'name':'Pictures',\n      },\n    ]\n\n    this.state = {\n      current_section : 'Info'\n    }\n  }\n\n  handleClick = (e) => {\n    e.stopPropagation()\n    var current_section = e.target.innerHTML\n    this.setState({current_section})\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <h2>{this.props.name}</h2>\n      <InfoLinks sections={this.HOUSE_LINKS} handleClick={this.handleClick}/>\n      {this.state.current_section === \"Info\" && \n        <Info \n          name={this.props.name}\n          houses={this.props.houses}\n          section={this.state.current_section}\n          text={this.props.houseDescription}\n          features={this.props.houseFeatures}/>\n      }\n      </React.Fragment>\n    )\n  }\n}\n\nconst HouseStyled = styled.div``\n\nclass InfoLinks extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.sections.map((house, j) => (\n          <Link key={j} name={house.name} handleClick={this.props.handleClick} />\n        ))}\n      </React.Fragment>\n    )\n  }\n}\n\nclass Link extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Button href=\"#\" key={this.props.Ikey} onClick={this.props.handleClick}>{this.props.name}</Button>\n    )\n  }\n}\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    return(\n      <React.Fragment>\n      <h3> Features </h3>\n      <ul>\n      {this.props.features.map(feature => (\n        <li>{feature}</li>\n      ))}\n      </ul>\n      <h3> Description </h3>\n      <p>{this.props.text}</p>\n      </React.Fragment>\n    )\n  }\n}\n\n\n\n\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n\n  ${props =>\n    props.primary &&\n    css`\n      background: palevioletred;\n      color: white;\n    `};\n`\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}